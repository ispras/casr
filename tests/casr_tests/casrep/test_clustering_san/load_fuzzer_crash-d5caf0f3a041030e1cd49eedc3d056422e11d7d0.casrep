{
  "Date": "2022-09-28T14:39:20.478291+03:00",
  "Uname": "Linux titanfall 5.13.0-51-generic #58~20.04.1-Ubuntu SMP Tue Jun 14 11:29:12 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",
  "OS": "Ubuntu",
  "OSRelease": "20.04",
  "Architecture": "amd64",
  "ExecutablePath": "/load_fuzzer",
  "ProcEnviron": [],
  "ProcCmdline": "/load_fuzzer /fuzz/sydr-fuzz-out/crashes/crash-d5caf0f3a041030e1cd49eedc3d056422e11d7d0",
  "ProcStatus": [],
  "ProcMaps": [],
  "ProcFiles": [],
  "NetworkConnections": [],
  "CrashSeverity": {
    "Type": "NOT_EXPLOITABLE",
    "ShortDescription": "heap-buffer-overflow(read)",
    "Description": "Heap buffer overflow",
    "Explanation": "The target reads data past the end, or before the beginning, of the intended heap buffer."
  },
  "Stacktrace": [
    "#0 0x10cfb30 in xlnt::detail::compound_document::follow_chain(int, std::vector<int, std::allocator<int> > const&) /xlnt/source/detail/cryptography/compound_document.cpp:723:19",
    "#1 0x10bf1fb in xlnt::detail::compound_document::read_ssat() /xlnt/source/detail/cryptography/compound_document.cpp:1282:29",
    "#2 0x10bd53f in xlnt::detail::compound_document::compound_document(std::istream&) /xlnt/source/detail/cryptography/compound_document.cpp:516:5",
    "#3 0x998b40 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:320:37",
    "#4 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "#5 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "#6 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "#7 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "#8 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "#9 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "#10 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "#11 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "#12 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "#13 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "#14 0x426cbd in _start (/load_fuzzer+0x426cbd)"
  ],
  "Prstatus": {
    "registers": {}
  },
  "Disassembly": [],
  "Package": "",
  "PackageVersion": "",
  "PackageArchitecture": "",
  "PackageDescription": "",
  "timestamp": 1664365160478291952,
  "AsanReport": [
    "==240307==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x615000001780 at pc 0x0000010cfb31 bp 0x7fffffffbb30 sp 0x7fffffffbb28",
    "READ of size 4 at 0x615000001780 thread T0",
    "    #0 0x10cfb30 in xlnt::detail::compound_document::follow_chain(int, std::vector<int, std::allocator<int> > const&) /xlnt/source/detail/cryptography/compound_document.cpp:723:19",
    "    #1 0x10bf1fb in xlnt::detail::compound_document::read_ssat() /xlnt/source/detail/cryptography/compound_document.cpp:1282:29",
    "    #2 0x10bd53f in xlnt::detail::compound_document::compound_document(std::istream&) /xlnt/source/detail/cryptography/compound_document.cpp:516:5",
    "    #3 0x998b40 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:320:37",
    "    #4 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "    #5 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "    #6 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "    #7 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "    #8 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "    #9 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "    #10 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "    #11 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "    #12 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "    #13 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "    #14 0x426cbd in _start (/load_fuzzer+0x426cbd)",
    "",
    "0x615000001780 is located 1536 bytes to the right of 512-byte region [0x615000000f80,0x615000001180)",
    "allocated by thread T0 here:",
    "    #0 0x512bbd in operator new(unsigned long) /llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3",
    "    #1 0x11068de in __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:115:27",
    "    #2 0x110674a in std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:460:20",
    "    #3 0x110665e in std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:346:20",
    "    #4 0x1122f50 in std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:561:34",
    "    #5 0x10cbb3d in std::vector<int, std::allocator<int> >::resize(unsigned long, int const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:960:4",
    "    #6 0x1140ad4 in xlnt::detail::binary_writer<int>::extend(unsigned long, unsigned char) /xlnt/source/../source/detail/binary.hpp:247:16",
    "    #7 0x1141898 in void xlnt::detail::binary_writer<int>::append<unsigned char>(xlnt::detail::binary_reader<unsigned char>&, unsigned long) /xlnt/source/../source/detail/binary.hpp:270:13",
    "    #8 0x114125c in void xlnt::detail::binary_writer<int>::append<unsigned char>(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/../source/detail/binary.hpp:259:9",
    "    #9 0x10e7a03 in void xlnt::detail::compound_document::read_sector<int>(int, xlnt::detail::binary_writer<int>&) /xlnt/source/detail/cryptography/compound_document.cpp:594:12",
    "    #10 0x10beb76 in xlnt::detail::compound_document::read_sat() /xlnt/source/detail/cryptography/compound_document.cpp:1273:9",
    "    #11 0x10bd523 in xlnt::detail::compound_document::compound_document(std::istream&) /xlnt/source/detail/cryptography/compound_document.cpp:515:5",
    "    #12 0x998b40 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:320:37",
    "    #13 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "    #14 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "    #15 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "    #16 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "    #17 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "    #18 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "    #19 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "    #20 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "    #21 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "    #22 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "",
    "SUMMARY: AddressSanitizer: heap-buffer-overflow /xlnt/source/detail/cryptography/compound_document.cpp:723:19 in xlnt::detail::compound_document::follow_chain(int, std::vector<int, std::allocator<int> > const&)",
    "Shadow bytes around the buggy address:",
    "  0x0c2a7fff82a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff82b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff82c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff82d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff82e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "=>0x0c2a7fff82f0:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff8300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff8310: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff8320: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff8330: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "  0x0c2a7fff8340: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",
    "Shadow byte legend (one shadow byte represents 8 application bytes):",
    "  Addressable:           00",
    "  Partially addressable: 01 02 03 04 05 06 07 ",
    "  Heap left redzone:       fa",
    "  Freed heap region:       fd",
    "  Stack left redzone:      f1",
    "  Stack mid redzone:       f2",
    "  Stack right redzone:     f3",
    "  Stack after return:      f5",
    "  Stack use after scope:   f8",
    "  Global redzone:          f9",
    "  Global init order:       f6",
    "  Poisoned by user:        f7",
    "  Container overflow:      fc",
    "  Array cookie:            ac",
    "  Intra object redzone:    bb",
    "  ASan internal:           fe",
    "  Left alloca redzone:     ca",
    "  Right alloca redzone:    cb",
    "==240307==ABORTING"
  ],
  "CrashLine": "/xlnt/source/detail/cryptography/compound_document.cpp:723:19",
  "Source": [
    "    719    ",
    "    720        while (current >= 0)",
    "    721        {",
    "    722            chain.push_back(current);",
    "--->723            current = table[static_cast<std::size_t>(current)];",
    "    724        }",
    "    725    ",
    "    726        return chain;",
    "    727    }",
    "    728    "
  ]
}