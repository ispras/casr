{
  "Date": "2022-09-28T14:39:12.782539+03:00",
  "Uname": "Linux titanfall 5.13.0-51-generic #58~20.04.1-Ubuntu SMP Tue Jun 14 11:29:12 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",
  "OS": "Ubuntu",
  "OSRelease": "20.04",
  "Architecture": "amd64",
  "ExecutablePath": "/load_fuzzer",
  "ProcEnviron": [],
  "ProcCmdline": "/load_fuzzer /fuzz/sydr-fuzz-out/crashes/crash-cac5113fd13d8597744ce63ea114786398e41e25",
  "ProcStatus": [],
  "ProcMaps": [],
  "ProcFiles": [],
  "NetworkConnections": [],
  "CrashSeverity": {
    "Type": "NOT_EXPLOITABLE",
    "ShortDescription": "SourceAv",
    "Description": "Access violation on source operand",
    "Explanation": "The target crashed on an access violation at an address matching the source operand of the current instruction. This likely indicates a read access violation."
  },
  "Stacktrace": [
    "#0 0x10ec72a in xlnt::detail::compound_document_istreambuf::xsgetn(char*, long) /xlnt/source/detail/cryptography/compound_document.cpp:126:31",
    "#1 0x7ffff7ef6a81 in std::istream::read(char*, long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x118a81)",
    "#2 0x9a0764 in unsigned short xlnt::detail::read<unsigned short>(std::istream&) /xlnt/source/../source/detail/binary.hpp:301:8",
    "#3 0x99b3e2 in (anonymous namespace)::read_encryption_info(std::istream&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:265:26",
    "#4 0x998da6 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:323:28",
    "#5 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "#6 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "#7 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "#8 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "#9 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "#10 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "#11 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "#12 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "#13 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "#14 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "#15 0x426cbd in _start (/load_fuzzer+0x426cbd)"
  ],
  "Prstatus": {
    "registers": {}
  },
  "Disassembly": [],
  "Package": "",
  "PackageVersion": "",
  "PackageArchitecture": "",
  "PackageDescription": "",
  "timestamp": 1664365152782539515,
  "AsanReport": [
    "==240120==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0000010ec72a bp 0x7fffffffb720 sp 0x7fffffffac00 T0)",
    "==240120==The signal is caused by a READ memory access.",
    "==240120==Hint: address points to the zero page.",
    "    #0 0x10ec72a in xlnt::detail::compound_document_istreambuf::xsgetn(char*, long) /xlnt/source/detail/cryptography/compound_document.cpp:126:31",
    "    #1 0x7ffff7ef6a81 in std::istream::read(char*, long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x118a81)",
    "    #2 0x9a0764 in unsigned short xlnt::detail::read<unsigned short>(std::istream&) /xlnt/source/../source/detail/binary.hpp:301:8",
    "    #3 0x99b3e2 in (anonymous namespace)::read_encryption_info(std::istream&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:265:26",
    "    #4 0x998da6 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:323:28",
    "    #5 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "    #6 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "    #7 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "    #8 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "    #9 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "    #10 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "    #11 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "    #12 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "    #13 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "    #14 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "    #15 0x426cbd in _start (/load_fuzzer+0x426cbd)",
    "",
    "AddressSanitizer can not provide additional info.",
    "SUMMARY: AddressSanitizer: SEGV /xlnt/source/detail/cryptography/compound_document.cpp:126:31 in xlnt::detail::compound_document_istreambuf::xsgetn(char*, long)",
    "==240120==ABORTING"
  ],
  "CrashLine": "/xlnt/source/detail/cryptography/compound_document.cpp:126:31",
  "Source": [
    "    122    ",
    "    123            const auto sector_chain = short_stream() ? document_.ssat_ : document_.sat_;",
    "    124            const auto chain = document_.follow_chain(entry_.start, sector_chain);",
    "    125            const auto sector_size = short_stream() ? document_.short_sector_size() : document_.sector_size();",
    "--->126            auto current_sector = chain[position_ / sector_size];",
    "    127            auto remaining = std::min(std::size_t(entry_.size) - position_, std::size_t(count));",
    "    128    ",
    "    129            while (remaining)",
    "    130            {",
    "    131                if (current_sector_.empty() || chain[position_ / sector_size] != current_sector)"
  ]
}