{
  "Date": "2022-09-28T14:39:09.672568+03:00",
  "Uname": "Linux titanfall 5.13.0-51-generic #58~20.04.1-Ubuntu SMP Tue Jun 14 11:29:12 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",
  "OS": "Ubuntu",
  "OSRelease": "20.04",
  "Architecture": "amd64",
  "ExecutablePath": "/load_fuzzer",
  "ProcEnviron": [],
  "ProcCmdline": "/load_fuzzer /fuzz/sydr-fuzz-out/crashes/crash-c886939eb1d08b7441f5c7db5214880e9edb6293",
  "ProcStatus": [],
  "ProcMaps": [],
  "ProcFiles": [],
  "NetworkConnections": [],
  "CrashSeverity": {
    "Type": "NOT_EXPLOITABLE",
    "ShortDescription": "AbortSignal",
    "Description": "Abort signal",
    "Explanation": "The target is stopped on a SIGABRT. SIGABRTs are often generated by libc and compiled check-code to indicate potentially exploitable conditions."
  },
  "Stacktrace": [
    "#0 0x4e6411 in __sanitizer_print_stack_trace /llvm-project/compiler-rt/lib/asan/asan_stack.cpp:87:3",
    "#1 0x45ad47 in fuzzer::PrintStackTrace() /llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5",
    "#2 0x440f53 in fuzzer::Fuzzer::CrashCallback() /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3",
    "#3 0x7ffff7c8041f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f)",
    "#4 0x7ffff7a9000a in __libc_signal_restore_set /build/glibc-SzIz7B/glibc-2.31/signal/../sysdeps/unix/sysv/linux/internal-signals.h:86:3",
    "#5 0x7ffff7a9000a in raise /build/glibc-SzIz7B/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:48:3",
    "#6 0x7ffff7a6f858 in abort /build/glibc-SzIz7B/glibc-2.31/stdlib/abort.c:79:7",
    "#7 0x7ffff7e7c910  (/lib/x86_64-linux-gnu/libstdc++.so.6+0x9e910)",
    "#8 0x7ffff7e8838b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa38b)",
    "#9 0x7ffff7e883f6 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa3f6)",
    "#10 0x7ffff7e886a8 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa6a8)",
    "#11 0x7ffff7e7f325 in std::__throw_length_error(char const*) (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa1325)",
    "#12 0x515d69 in std::vector<unsigned char, std::allocator<unsigned char> >::_S_check_init_len(unsigned long, std::allocator<unsigned char> const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1770:4",
    "#13 0x9c0124 in std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned long, unsigned char const&, std::allocator<unsigned char> const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:524:15",
    "#14 0x10e77af in void xlnt::detail::compound_document::read_sector<int>(int, xlnt::detail::binary_writer<int>&) /xlnt/source/detail/cryptography/compound_document.cpp:592:23",
    "#15 0x10be1ee in xlnt::detail::compound_document::read_msat() /xlnt/source/detail/cryptography/compound_document.cpp:1258:13",
    "#16 0x10bd507 in xlnt::detail::compound_document::compound_document(std::istream&) /xlnt/source/detail/cryptography/compound_document.cpp:514:5",
    "#17 0x998b40 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:320:37",
    "#18 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "#19 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "#20 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "#21 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "#22 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "#23 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "#24 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "#25 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "#26 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "#27 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "#28 0x426cbd in _start (/load_fuzzer+0x426cbd)"
  ],
  "Prstatus": {
    "registers": {}
  },
  "Disassembly": [],
  "Package": "",
  "PackageVersion": "",
  "PackageArchitecture": "",
  "PackageDescription": "",
  "timestamp": 1664365149672568684,
  "AsanReport": [
    "==240043== ERROR: libFuzzer: deadly signal",
    "    #0 0x4e6411 in __sanitizer_print_stack_trace /llvm-project/compiler-rt/lib/asan/asan_stack.cpp:87:3",
    "    #1 0x45ad47 in fuzzer::PrintStackTrace() /llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5",
    "    #2 0x440f53 in fuzzer::Fuzzer::CrashCallback() /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3",
    "    #3 0x7ffff7c8041f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f)",
    "    #4 0x7ffff7a9000a in __libc_signal_restore_set /build/glibc-SzIz7B/glibc-2.31/signal/../sysdeps/unix/sysv/linux/internal-signals.h:86:3",
    "    #5 0x7ffff7a9000a in raise /build/glibc-SzIz7B/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:48:3",
    "    #6 0x7ffff7a6f858 in abort /build/glibc-SzIz7B/glibc-2.31/stdlib/abort.c:79:7",
    "    #7 0x7ffff7e7c910  (/lib/x86_64-linux-gnu/libstdc++.so.6+0x9e910)",
    "    #8 0x7ffff7e8838b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa38b)",
    "    #9 0x7ffff7e883f6 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa3f6)",
    "    #10 0x7ffff7e886a8 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa6a8)",
    "    #11 0x7ffff7e7f325 in std::__throw_length_error(char const*) (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa1325)",
    "    #12 0x515d69 in std::vector<unsigned char, std::allocator<unsigned char> >::_S_check_init_len(unsigned long, std::allocator<unsigned char> const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1770:4",
    "    #13 0x9c0124 in std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned long, unsigned char const&, std::allocator<unsigned char> const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:524:15",
    "    #14 0x10e77af in void xlnt::detail::compound_document::read_sector<int>(int, xlnt::detail::binary_writer<int>&) /xlnt/source/detail/cryptography/compound_document.cpp:592:23",
    "    #15 0x10be1ee in xlnt::detail::compound_document::read_msat() /xlnt/source/detail/cryptography/compound_document.cpp:1258:13",
    "    #16 0x10bd507 in xlnt::detail::compound_document::compound_document(std::istream&) /xlnt/source/detail/cryptography/compound_document.cpp:514:5",
    "    #17 0x998b40 in (anonymous namespace)::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:320:37",
    "    #18 0x99833a in xlnt::detail::decrypt_xlsx(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:339:12",
    "    #19 0x999aee in xlnt::detail::xlsx_consumer::read(std::istream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /xlnt/source/detail/cryptography/xlsx_crypto_consumer.cpp:345:28",
    "    #20 0x54a288 in xlnt::workbook::load(std::istream&) /xlnt/source/workbook/workbook.cpp:901:22",
    "    #21 0x571587 in xlnt::workbook::load(std::vector<unsigned char, std::allocator<unsigned char> > const&) /xlnt/source/workbook/workbook.cpp:919:5",
    "    #22 0x515612 in LLVMFuzzerTestOneInput /xlnt/build/../load_fuzzer.cc:9:23",
    "    #23 0x442481 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15",
    "    #24 0x42c39c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6",
    "    #25 0x4320eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9",
    "    #26 0x45b682 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10",
    "    #27 0x7ffff7a71082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16",
    "    #28 0x426cbd in _start (/load_fuzzer+0x426cbd)",
    "",
    "NOTE: libFuzzer has rudimentary signal handlers.",
    "      Combine libFuzzer with AddressSanitizer or similar for better crash reports.",
    "SUMMARY: libFuzzer: deadly signal"
  ],
  "CrashLine": "/xlnt/source/detail/cryptography/compound_document.cpp:592:23",
  "Source": [
    "    588    template <typename T>",
    "    589    void compound_document::read_sector(sector_id id, binary_writer<T> &writer)",
    "    590    {",
    "    591        in_->seekg(static_cast<std::ptrdiff_t>(sector_data_start() + sector_size() * static_cast<std::size_t>(id)));",
    "--->592        std::vector<byte> sector(sector_size(), 0);",
    "    593        in_->read(reinterpret_cast<char *>(sector.data()), static_cast<std::ptrdiff_t>(sector_size()));",
    "    594        writer.append(sector);",
    "    595    }",
    "    596    ",
    "    597    template <typename T>"
  ]
}